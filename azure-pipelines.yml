trigger:
  branches:
    include:
      - main  # Trigger pipeline on changes to the main branch

stages:
- stage: BuildAndPushImages
  displayName: 'Build and Push Docker Images'
  jobs:
  - job: BuildAndPush
    displayName: 'Build and Push Docker Images for All Services'
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: self

    - task: Docker@2
      displayName: 'Login to Docker Hub'
      inputs:
        command: login
        containerRegistry: 'YourDockerHubConnection'  # Set up Docker Hub service connection in Azure DevOps

    - ${{ each service in parameters.services }}:
      - script: |
          echo "Building and pushing Docker image for ${{ service.name }}..."
          docker build -t ${{ parameters.dockerRegistry }}/${{ service.name }}:$(Build.BuildId) ${{ service.path }}
          docker push ${{ parameters.dockerRegistry }}/${{ service.name }}:$(Build.BuildId)
        displayName: 'Build and Push ${{ service.name }}'

- stage: DeployToAKS
  displayName: 'Deploy to AKS'
  dependsOn: BuildAndPushImages
  jobs:
  - deployment: DeployServices
    displayName: 'Deploy All Services to AKS'
    environment: 'Dev'  # Define your environment in Azure DevOps
    pool:
      vmImage: 'ubuntu-latest'

    strategy:
      runOnce:
        deploy:
          steps:

          - task: Kubernetes@1
            displayName: 'Set AKS context'
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: 'YourAzureSubscriptionConnection'  # Azure subscription service connection
              azureResourceGroup: 'YourResourceGroup'
              kubernetesCluster: 'YourAKSClusterName'
              namespace: 'default'  # or another namespace if required
              command: 'get'
              arguments: 'pods'

          - ${{ each service in parameters.services }}:
            - task: KubernetesManifest@0
              displayName: 'Deploy ${{ service.name }} to AKS'
              inputs:
                action: 'deploy'
                kubernetesServiceConnection: 'YourKubernetesServiceConnection'  # Kubernetes service connection
                namespace: 'default'
                manifests: |
                  ${{ service.path }}/deployment.yaml
                containers: |
                  ${{ parameters.dockerRegistry }}/${{ service.name }}:$(Build.BuildId)

parameters:
  services:
    - name: 'service1'
      path: 'service1'
    - name: 'service2'
      path: 'service2'
    - name: 'service3'
      path: 'service3'
    - name: 'service4'
      path: 'service4'
    - name: 'service5'
      path: 'service5'
    - name: 'service6'
      path: 'service6'
    - name: 'service7'
      path: 'service7'
    - name: 'service8'
      path: 'service8'
    - name: 'service9'
      path: 'service9'
    - name: 'service10'
      path: 'service10'

  dockerRegistry: 'your-docker-registry/namespace'
